// Generated by Dagger (https://dagger.dev).
package in.istevit.app.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import in.istevit.app.data.network.service.CommonNetworkService;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCommonNetworkServiceFactory implements Factory<CommonNetworkService> {
  @Override
  public CommonNetworkService get() {
    return provideCommonNetworkService();
  }

  public static AppModule_ProvideCommonNetworkServiceFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CommonNetworkService provideCommonNetworkService() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCommonNetworkService());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideCommonNetworkServiceFactory INSTANCE = new AppModule_ProvideCommonNetworkServiceFactory();
  }
}
