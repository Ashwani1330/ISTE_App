// Generated by Dagger (https://dagger.dev).
package in.istevit.app.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import in.istevit.app.data.network.service.CommonNetworkService;
import in.istevit.app.data.repository.blogs.BlogsRepoImpl;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideBlogsRepositoryFactory implements Factory<BlogsRepoImpl> {
  private final Provider<CommonNetworkService> serviceProvider;

  public AppModule_ProvideBlogsRepositoryFactory(Provider<CommonNetworkService> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public BlogsRepoImpl get() {
    return provideBlogsRepository(serviceProvider.get());
  }

  public static AppModule_ProvideBlogsRepositoryFactory create(
      Provider<CommonNetworkService> serviceProvider) {
    return new AppModule_ProvideBlogsRepositoryFactory(serviceProvider);
  }

  public static BlogsRepoImpl provideBlogsRepository(CommonNetworkService service) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideBlogsRepository(service));
  }
}
