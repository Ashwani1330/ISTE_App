// Generated by data binding compiler. Do not edit!
package in.istevit.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import in.istevit.app.R;
import in.istevit.app.data.model.home.HomeAnnouncementsData;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SingleAnnouncementsItemBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout announcementsRoot;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView eventNameTV;

  @NonNull
  public final ImageView imgView;

  @Bindable
  protected HomeAnnouncementsData mListItem;

  protected SingleAnnouncementsItemBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ConstraintLayout announcementsRoot, CardView cardView,
      TextView eventNameTV, ImageView imgView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.announcementsRoot = announcementsRoot;
    this.cardView = cardView;
    this.eventNameTV = eventNameTV;
    this.imgView = imgView;
  }

  public abstract void setListItem(@Nullable HomeAnnouncementsData listItem);

  @Nullable
  public HomeAnnouncementsData getListItem() {
    return mListItem;
  }

  @NonNull
  public static SingleAnnouncementsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.single_announcements_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SingleAnnouncementsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SingleAnnouncementsItemBinding>inflateInternal(inflater, R.layout.single_announcements_item, root, attachToRoot, component);
  }

  @NonNull
  public static SingleAnnouncementsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.single_announcements_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SingleAnnouncementsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SingleAnnouncementsItemBinding>inflateInternal(inflater, R.layout.single_announcements_item, null, false, component);
  }

  public static SingleAnnouncementsItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SingleAnnouncementsItemBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SingleAnnouncementsItemBinding)bind(component, view, R.layout.single_announcements_item);
  }
}
