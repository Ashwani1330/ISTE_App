// Generated by data binding compiler. Do not edit!
package in.istevit.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import in.istevit.app.R;
import in.istevit.app.data.model.ProjectsModel;
import in.istevit.app.ui.projects.ProjectOnClickCallback;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SingleProjectItemBinding extends ViewDataBinding {
  @Bindable
  protected ProjectsModel mProjectItem;

  @Bindable
  protected ProjectOnClickCallback mCallback;

  protected SingleProjectItemBinding(Object _bindingComponent, View _root, int _localFieldCount) {
    super(_bindingComponent, _root, _localFieldCount);
  }

  public abstract void setProjectItem(@Nullable ProjectsModel projectItem);

  @Nullable
  public ProjectsModel getProjectItem() {
    return mProjectItem;
  }

  public abstract void setCallback(@Nullable ProjectOnClickCallback callback);

  @Nullable
  public ProjectOnClickCallback getCallback() {
    return mCallback;
  }

  @NonNull
  public static SingleProjectItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.single_project_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SingleProjectItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SingleProjectItemBinding>inflateInternal(inflater, R.layout.single_project_item, root, attachToRoot, component);
  }

  @NonNull
  public static SingleProjectItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.single_project_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SingleProjectItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SingleProjectItemBinding>inflateInternal(inflater, R.layout.single_project_item, null, false, component);
  }

  public static SingleProjectItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SingleProjectItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (SingleProjectItemBinding)bind(component, view, R.layout.single_project_item);
  }
}
